# .github/workflows/deploy-infrastructure.yml
name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      destroy:
        description: 'Destroy infrastructure'
        required: false
        default: false
        type: boolean
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
  pull_request:
    branches:
      - main
    paths:
      - 'terraform/**'

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_VERSION: "1.6.0"

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      working-directory: terraform/environments/prod
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=wordpress-eks/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Terraform Validate
      working-directory: terraform/environments/prod
      run: terraform validate

    - name: Terraform Plan
      working-directory: terraform/environments/prod
      run: |
        terraform plan \
          -var="aws_region=${{ env.AWS_REGION }}" \
          -out=tfplan

    - name: Upload plan
      uses: actions/upload-artifact@v4
      with:
        name: terraform-plan
        path: terraform/environments/prod/tfplan
        retention-days: 5

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && !inputs.destroy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}
        terraform_wrapper: false

    - name: Terraform Init
      working-directory: terraform/environments/prod
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=wordpress-eks/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Terraform Apply
      working-directory: terraform/environments/prod
      run: |
        terraform apply -auto-approve \
          -var="aws_region=${{ env.AWS_REGION }}"

    - name: Get Terraform Outputs
      id: terraform_outputs
      working-directory: terraform/environments/prod
      run: |
        echo "cluster_name=$(terraform output -raw cluster_name)" >> $GITHUB_OUTPUT
        echo "cluster_endpoint=$(terraform output -raw cluster_endpoint)" >> $GITHUB_OUTPUT
        echo "efs_file_system_id=$(terraform output -raw efs_file_system_id)" >> $GITHUB_OUTPUT
        echo "vpc_id=$(terraform output -raw vpc_id)" >> $GITHUB_OUTPUT

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ steps.terraform_outputs.outputs.cluster_name }}

    - name: Test cluster connectivity
      run: |
        kubectl get nodes
        kubectl get namespaces

    - name: Store outputs as artifacts
      run: |
        mkdir -p outputs
        echo "${{ steps.terraform_outputs.outputs.cluster_name }}" > outputs/cluster_name
        echo "${{ steps.terraform_outputs.outputs.cluster_endpoint }}" > outputs/cluster_endpoint
        echo "${{ steps.terraform_outputs.outputs.efs_file_system_id }}" > outputs/efs_file_system_id
        echo "${{ steps.terraform_outputs.outputs.vpc_id }}" > outputs/vpc_id

    - name: Upload outputs
      uses: actions/upload-artifact@v4
      with:
        name: terraform-outputs
        path: outputs/
        retention-days: 30

  terraform-destroy:
    name: Terraform Destroy
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.destroy
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init
      working-directory: terraform/environments/prod
      run: |
        terraform init \
          -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
          -backend-config="key=wordpress-eks/terraform.tfstate" \
          -backend-config="region=${{ env.AWS_REGION }}"

    - name: Terraform Destroy
      working-directory: terraform/environments/prod
      run: |
        terraform destroy -auto-approve \
          -var="aws_region=${{ env.AWS_REGION }}"