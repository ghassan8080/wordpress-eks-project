name: destroy-infrastructure

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  TF_STATE_BUCKET: ${{ secrets.TF_STATE_BUCKET }}
  TF_STATE_LOCK_TABLE: ${{ secrets.TF_STATE_LOCK_TABLE }}

jobs:
  destroy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/environments/prod
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate required environment variables
        run: |
          set -euo pipefail
          for var in AWS_REGION TF_STATE_BUCKET TF_STATE_LOCK_TABLE; do
            if [ -z "${!var:-}" ]; then
              echo "Required env var $var is not set. Configure GitHub Secret $var." >&2
              exit 1
            fi
          done

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init (S3 backend)
        run: |
          cat > backend.hcl <<EOF
          bucket         = "${TF_STATE_BUCKET}"
          key            = "wordpress-eks/prod/terraform.tfstate"
          region         = "${AWS_REGION}"
          dynamodb_table = "${TF_STATE_LOCK_TABLE}"
          encrypt        = true
          EOF
          terraform init -upgrade -backend-config=backend.hcl

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false -lock=true -lock-timeout=5m -var="aws_region=${AWS_REGION}"
